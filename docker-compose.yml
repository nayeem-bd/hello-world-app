version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: pgsql_container
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-test-courier}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
    ports:
      - "5435:5432"
    volumes:
      - pgdbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "psql", "-U", "user", "-d", "test-courier", "-c", "SELECT 1"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - app_network

  app:
    image: nayeembd/hello-world-app:v1
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node_app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PG_USER: ${PG_USER}
      PG_HOST: ${PG_HOST}
      PG_DATABASE: ${PG_DATABASE}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_PORT: ${PG_PORT}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:4000/health"]
      interval: 30s
      retries: 5
      timeout: 10s
      start_period: 30s
    networks:
      - app_network

volumes:
  pgdbdata:

networks:
  app_network:
    driver: bridge